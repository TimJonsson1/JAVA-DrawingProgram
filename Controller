package sample;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.Slider;
import javafx.scene.input.KeyCode;
import javafx.scene.layout.AnchorPane;
import javafx.scene.paint.Color;


import java.net.URL;
import java.util.ResourceBundle;

public class Controller implements Initializable {

    @FXML
    private AnchorPane anchorPane;
    @FXML
    private Canvas canvas;
    @FXML
    private Label label;
    @FXML
    private Button eraser;
    @FXML
    private Button red;
    @FXML
    private Button blue;
    @FXML
    private Button yellow;
    @FXML
    private Slider slider;


    private Color colorCode;

    private double prevX;
    private double prevY;
    private double brushSize;

    public Controller() {
    }


    @Override
    public void initialize(URL url, ResourceBundle resourceBundle) {
        GraphicsContext gc = canvas.getGraphicsContext2D();

        gc.setFill(Color.WHITE);
        gc.fillRect(1, 1, canvas.getWidth(), canvas.getHeight());

        gc.setStroke(Color.BLACK);
        gc.strokeRect(1, 1, canvas.getWidth() - 3, canvas.getHeight() - 3);

        if (colorCode == null) {
            colorCode = Color.RED;
            label.setText("RED");
        }

        anchorPane.setOnKeyPressed(event -> {
            if (event.getCode() == KeyCode.getKeyCode("1")) {
                colorCode = Color.RED;
                label.setText("RED");

            } else if (event.getCode() == KeyCode.getKeyCode("2")) {
                colorCode = Color.BLUE;
                label.setText("BLUE");

            } else if (event.getCode() == KeyCode.getKeyCode("3")) {
                colorCode = Color.YELLOW;
                label.setText("YELLOW");

            } else if (event.getCode() == KeyCode.getKeyCode("0")) {
                colorCode = Color.WHITE;
                label.setText("ERASE");
            }

        });

        canvas.setOnMousePressed(event -> {
            prevX = event.getX();
            prevY = event.getY();

        });

        slider.setOnMouseReleased(event -> {
            if (slider.getValue() == 0) {
                slider.setValue(1);

            } else if (slider.getValue() == 100) {
                slider.setValue(99);
            }
            brushSize = slider.getValue();
        });

        canvas.setOnMouseDragged(event -> {
            //sets size of drawing pen
            gc.setLineWidth(brushSize);

            gc.setStroke(Color.valueOf(String.valueOf(colorCode)));
            gc.strokeLine(event.getX(), event.getY(), prevX, prevY);

            prevX = event.getX();
            prevY = event.getY();
            //System.out.printf("[%.0f %.0f]%n", event.getX(), event.getY());
            System.out.printf("Brush = [%.0f]%n", slider.getValue());

        });


        red.setOnAction(event -> {
            colorCode = Color.RED;
            label.setText("RED");
        });

        blue.setOnAction(event -> {
            colorCode = Color.BLUE;
            label.setText("BLUE");
        });

        yellow.setOnAction(event -> {
            colorCode = Color.YELLOW;
            label.setText("YELLOW");
        });
        eraser.setOnAction(event -> {
            colorCode = Color.WHITE;
            label.setText("ERASE");
        });

        canvas.setFocusTraversable(true);
        canvas.requestFocus();

    }


}
